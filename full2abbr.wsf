<job>
<comment>
BibTeX の bib ファイルにおいて、journal の右辺を調べて
雑誌正式名称を省略名称に変換する。
正式名称と省略名称の対応リストには、デフォルトで JabRef の提供する
http://jabref.sourceforge.net/journals/journal_abbreviations_general.txt
を利用する。

useAMSDB = true; とすることで、AMS の提供する
http://www.ams.org/msnhtml/annser.csv
を追加で利用することもできる。

CSV でファイル（例えば my.csv）を作成し、それを
DBFilenames = ["my.csv"];
として読み込ませて利用することもできる。

CSV の書式は、第 1 列が省略名、第 2 列が正式名。
それぞれダブルクォーテーションで囲む。
</comment>

<script language="JavaScript">

var inputBibFilename  = "library.bib";
var outputBibFilename = "abbrLibrary.bib";

var useJabRefDB = true;
var useAMSDB    = false;

var DBFilenames = ["my.csv", "aps.csv"];

// カンマ区切り文字列 t のデータを a に追加する関数 loadCSVText(t, a)
var loadCSVText = function(t, a){
  var ls = t.split(String.fromCharCode(10));  //LF
  for(var i = 0; i < ls.length; ++i){
    // 一旦タブ区切りに変換して split する（なので、実は tsv データも処理できる）
    var d = ls[i].replace(/","/g, "\"\t\"").split("\t");
    if(d.length < 2) continue;
    // ダブルクォーテーションを除去
    for(var j = 0; j < 2; ++j) d[j] = d[j].replace(/^"(.*)"$/, "$1");
    a[d[1]] = d[0];
  }
}

// ファイル名 fn の csv ファイルのデータを a に追加する関数 loadCSV(fn, a)
var loadCSV = function(fn, a){
  if(!(new ActiveXObject("Scripting.FileSystemObject")).FileExists(fn)) return;
  var sr = new ActiveXObject("ADODB.Stream");
  sr.Charset = "Shift_JIS";
  sr.Open();
  sr.LoadFromFile(fn);
  loadCSVText(sr.ReadText(), a);
}

// URL から body の innerText を取得する関数 getBodyText(url)
var getBodyText = function(url){
  var IE = new ActiveXObject("InternetExplorer.Application");
  IE.Navigate(url);
  while(IE.Busy || (IE.readystate != 4)) WScript.Sleep(100);
  var t = IE.document.getElementsByTagName("body")[0].innerText;
  IE.Quit();
  return t;
}

// AMS の annser.csv のデータを a に追加する関数 loadAMS(a)
var loadAMS = function(a){ loadCSVText(getBodyText("http://www.ams.org/msnhtml/annser.csv"), a); }

// JabRef の journal_abbreviations_general.txt のデータを a に追加する関数 loadJabRef(a)
var loadJabRef = function(a){
  var ls = getBodyText("http://jabref.sourceforge.net/journals/journal_abbreviations_general.txt").split("\n");
  for(var i = 0; i < ls.length; ++i){
    var d = ls[i].split("=");
    if(d.length < 2) continue;
    // 改行と空白の処理
    for(var j = 0; j < 2; ++j) d[j] = d[j].replace(/^\s+(.*)/, "$1").replace(/(.*)\s+$/g, "$1")
    a[d[0]] = d[1];
  }
}

// データベース読み込み（後に読み込んだデータが優先される）
var DB = [];
if(useAMSDB   ) loadAMS(DB);
if(useJabRefDB) loadJabRef(DB);
for(var i = DBFilenames.length; i >= 0; --i) loadCSV(DBFilenames[i], DB);

// 入力 bib ファイル読み込み
if(!(new ActiveXObject("Scripting.FileSystemObject")).FileExists(inputBibFilename)){
  WScript.Echo("入力 bib ファイル " + inputBibFilename + " が見付かりません.");
  WScript.Quit();
}
var sr = new ActiveXObject("ADODB.Stream");
sr.Charset = "utf-8";
sr.Open();
sr.LoadFromFile(inputBibFilename);
var inputLines = sr.ReadText().split("\n");
sr.Close();

// メインループ
var output = "";
for(var i = 0; i < inputLines.length; ++i){
  var l = inputLines[i];
  if(l.match(/journal += +{(.*)}/)){
    var full = RegExp.$1;
    var abbr = DB[full];
    if(abbr) l = l.replace(full, abbr);
  }
  output += l + "\n";
}

// 出力 bib ファイル書き込み
var sw = new ActiveXObject("ADODB.Stream");
sw.Charset = "utf-8";
sw.Open();
sw.WriteText(output);
sw.SaveToFile(outputBibFilename, 2);
sw.Close();

// 変換終了をベルで知らせる
var MP = WScript.CreateObject ("MediaPlayer.MediaPlayer");
MP.FileName = "C:\\windows\\media\\Windows Ding.wav";
MP.Play();
while(MP.PlayState != 0) WScript.Sleep(100);
</script>
</job>
